user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
	server {
	    listen 80;
	    server_name $FULLHOST;
	    server_tokens off;
	    return 301 https://$host$request_uri;
	}
	server {
	    listen 443 ssl;

	    # Insert production SSL configuration here
	    ssl_certificate     /etc/letsencrypt/live/${FULLHOST}/fullchain.pem;
	    ssl_certificate_key /etc/letsencrypt/live/${FULLHOST}/privkey.pem;

	    server_name ${FULLHOST};
	    server_tokens off;

	    location /auth {
		proxy_pass https://localhost:8443;
		proxy_http_version 1.1;

		proxy_set_header Host               $host;
		proxy_set_header X-Real-IP          $remote_addr;
		proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto  $scheme;

		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Access-Control-Allow-Methods' '*' always;
		add_header 'Access-Control-Allow-Headers' '*' always;
	    }

	    location / {
		try_files $uri @container;
	    }

	    location ~ ^\/api\/(?!auth) {
		# Tweak these as needed for the security concerns of the instance.
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Access-Control-Allow-Methods' '*' always;
		add_header 'Access-Control-Allow-Headers' '*' always;

		try_files $uri @container;
	    }

	    location @container {
		proxy_pass                       http://unix:${CHORD_TEMP_PATH}/nginx.sock;
		proxy_buffer_size                128k;
		proxy_buffers                    4 256k;
		proxy_busy_buffers_size          256k;
		proxy_http_version               1.1;
		proxy_set_header Host            $host;
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header Upgrade         $http_upgrade;
		proxy_set_header Connection      "upgrade";
	    }
	}
}
